{"version":3,"sources":["Image sync /^/.*$","Image/babies.jpg","Image/co2.jpg","Image/density.jpg","Image/energy_sector.jpg","Image/grand.jpg","Image/pm2.jpg","Image/urban-rural.jpg","Components/Layout/Header.js","Components/Chart/TimeSeries.js","Components/Card/UiCard.js","Components/Card/TitleCard.js","Components/Card/TitleData.jsx","Components/Landing/Filter.jsx","Components/Chart/Pyramid.js","Components/Card/CardPyramid.jsx","Components/Chart/PieChart.js","Components/Card/PieCard.js","Components/Card/PyramidData.js","Components/Card/Breadcrumb.js","Components/Landing/index.js","Components/skeleton/Skeloton.js","Components/CallApi/FetchData.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","theme","createMuiTheme","palette","primary","main","light","dark","contrastText","secondary","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","props","classes","className","ThemeProvider","AppBar","position","color","Toolbar","IconButton","edge","aria-label","Typography","variant","margin","buttons","display","flexDirection","justifyContent","padding","breakpoints","down","TimeSeries","data","useState","active","setActive","selectSeries","setSelectSeries","selectYear","setSelectYear","filterData","filter","item","Series","yearSplit","value","split","seriesLength","length","useEffect","indexStart","index","series","name","IndicatorName","options","chart","type","stacked","height","zoom","enabled","autoScaleYaxis","colors","toolbar","autoSelected","dataLabels","markers","size","text","align","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","yaxis","xaxis","categories","tooltip","shared","Fragment","Box","mr","Button","onClick","handleClick","event","preventDefault","console","log","styles","width","media","containt","maxWidth","React","memo","lastKey","pop","lastValue","Card","CardActionArea","CardMedia","style","image","require","ImageName","CardContent","gutterBottom","Idicator","componet","mt","mb","IndicatorUnit","paragraph","content","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","expandPosition","typography","fontSize","detail","alignItems","Population","population","unit","number","titleDetail","cityContent","parseFloat","toFixed","expanded","setExpanded","py","bgcolor","Name","Collapse","in","timeout","unmountOnExit","dangerouslySetInnerHTML","__html","clsx","aria-expanded","Divider","MedianAge","Density","headTitle","Rank","getFirstPageExtract","jsonResponse","pages","query","pageIds","firstPageId","extract","TitleData","provinceData","setTitleDetail","setCityContent","getCity","a","url","fetch","response","json","jsonContent","firstRow","Number","Total","Age","medianAge","Province","Search","document","drawer","flexShrink","drawerPaper","drawerContainer","overflow","drawerHeader","mixins","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","Listroot","backgroundColor","background","paper","Listnested","paddingLeft","removeDuplicate","listProvinces","val","array","indexOf","Filter","provinceList","onChang","useTheme","openC","setOpenC","openN","setOpenN","openNW","setOpenNW","openS","setOpenS","central","setCentral","northern","setNorthern","northeastern","setNortheastern","southern","setSouthern","open","setOpen","centralProvince","region","northernProvince","northeasternProvince","southernProvince","CssBaseline","hide","noWrap","Link","href","underline","Drawer","anchor","direction","List","component","aria-labelledby","subheader","ListSubheader","ListItem","button","ListItemIcon","ListItemText","key","disablePadding","Pyramid","total","male","female","numberMale","dataFemale","reverse","s","Math","abs","dataMale","maxYaxis","max","Yaxis","min","Min","findMaxvalue","plotOptions","bar","horizontal","barHeight","formatter","offsetX","stroke","grid","lines","show","forceNiceScale","floating","x","y","labels","round","transitionDuration","CardPyramid","provinceName","Section","styled","section","PieChart","productive","preReProductive","reProductive","postProductive","responsive","breakpoint","legend","fontWeight","head","formatNumbertoDecimal","Intl","NumberFormat","format","productiveObject","preProductive","totalPopulation","totalUndefine","PieCard","productiveDetail","setProductiveDetail","unDefine","pt","px","varaint","param","summaryOfPrereproductive","column","reduce","prev","cur","summaryOfReproductive","summaryOfPostreproductive","initPopulation","PyramidData","setTotal","setMale","setFeMale","setProductive","Male","Female","spitTotal","spitMale","spitFemale","Undefine","link","icon","Breadcrumb","province","Breadcrumbs","nationData","setProvince","setProvinceData","isLoad","setIsLoad","thailandData","useMemo","Grid","container","justify","xs","xl","lg","md","sm","spaceing","card","Skeloton","Header","Skeleton","animation","FetchData","setNationData","mounted","response_provinces","response_nation_data","provinces","callApi","Contianer","div","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.77641a9a.chunk.js","sourcesContent":["var map = {\n\t\"./babies.jpg\": 103,\n\t\"./co2.jpg\": 104,\n\t\"./density.jpg\": 105,\n\t\"./energy_sector.jpg\": 106,\n\t\"./grand.jpg\": 107,\n\t\"./pm2.jpg\": 108,\n\t\"./urban-rural.jpg\": 109\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 102;","module.exports = __webpack_public_path__ + \"static/media/babies.b0c0d4a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/co2.acfdf77d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/density.52791f27.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy_sector.2e60d0ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grand.c19a5b2f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pm2.3df65bd9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/urban-rural.07bab21d.jpg\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // blue and grey play nicely together.\r\n      main: \"#2196f3\",\r\n      light: \"#e3f2fd\",\r\n      dark: \"#0d47a1\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      // This is grey\r\n      main: \"#9e9e9e\",\r\n      light: \"#e0e0e0\",\r\n      dark: \"#212121\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <ThemeProvider theme={theme}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Demographic\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: theme.spacing(0),\r\n    },\r\n  },\r\n}));\r\n\r\nconst TimeSeries = ({ data }) => {\r\n  const classes = useStyles();\r\n  const [active, setActive] = useState(\"10\");\r\n  const [selectSeries, setSelectSeries] = useState([]);\r\n  const [selectYear, setSelectYear] = useState([]);\r\n\r\n  const filterData = Object.keys(data).filter(\r\n    (item) =>\r\n      item !== \"CountryName\" &&\r\n      item !== \"CountryCode\" &&\r\n      item !== \"IndicatorName\" &&\r\n      item !== \"IndicatorUnit\" &&\r\n      item !== \"Idicator\" &&\r\n      item !== \"paragraph\" &&\r\n      item !== \"ImageName\"\r\n  );\r\n\r\n  const Series = filterData.map((item) => data[item]);\r\n  const yearSplit = filterData.map((value) => value.split(\"_\")[1]);\r\n  const seriesLength = Series.length;\r\n\r\n  useEffect(() => {\r\n    let selectSeries = [];\r\n    let selectYear = [];\r\n    let indexStart = 0;\r\n    switch (active) {\r\n      case \"5\":\r\n        indexStart = seriesLength - 6;\r\n        selectSeries = Series.filter((value, index) => index > indexStart);\r\n        selectYear = yearSplit.filter((value, index) => index > indexStart);\r\n        setSelectSeries(selectSeries);\r\n        setSelectYear(selectYear);\r\n        break;\r\n      case \"10\":\r\n        indexStart = seriesLength - 11;\r\n        selectSeries = Series.filter((value, index) => index > indexStart);\r\n        selectYear = yearSplit.filter((value, index) => index > indexStart);\r\n        setSelectSeries(selectSeries);\r\n        setSelectYear(selectYear);\r\n        break;\r\n      case \"20\":\r\n        indexStart = seriesLength - 21;\r\n        selectSeries = Series.filter((value, index) => index > indexStart);\r\n        selectYear = yearSplit.filter((value, index) => index > indexStart);\r\n        setSelectSeries(selectSeries);\r\n        setSelectYear(selectYear);\r\n        break;\r\n      case \"30\":\r\n        indexStart = seriesLength - 31;\r\n        selectSeries = Series.filter((value, index) => index > indexStart);\r\n        selectYear = yearSplit.filter((value, index) => index > indexStart);\r\n        setSelectSeries(selectSeries);\r\n        setSelectYear(selectYear);\r\n        break;\r\n      case \"all\":\r\n        setSelectSeries(Series);\r\n        setSelectYear(yearSplit);\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  }, [active]);\r\n\r\n  const series = [\r\n    {\r\n      name: data.IndicatorName,\r\n      data: selectSeries,\r\n    },\r\n  ];\r\n  const options = {\r\n    chart: {\r\n      type: \"area\",\r\n      stacked: false,\r\n      height: 350,\r\n      zoom: {\r\n        type: \"x\",\r\n        enabled: true,\r\n        autoScaleYaxis: true,\r\n      },\r\n      colors: \"#E91E63\",\r\n      toolbar: {\r\n        autoSelected: \"zoom\",\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    title: {\r\n      text: \"\",\r\n      align: \"left\",\r\n    },\r\n    fill: {\r\n      colors: \"#2196f3\",\r\n      type: \"gradient\",\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        inverseColors: false,\r\n        opacityFrom: 0.5,\r\n        opacityTo: 0.3,\r\n        stops: [0, 90, 100],\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: \"Price\",\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: selectYear,\r\n    },\r\n    tooltip: {\r\n      shared: false,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.buttons}>\r\n        <Box mr={1}>\r\n          <Button\r\n            variant={active === \"5\" ? \"contained\" : \"outlined\"}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            className={classes.margin}\r\n            onClick={() => setActive(\"5\")}\r\n          >\r\n            5Y\r\n          </Button>\r\n        </Box>\r\n        <Box mr={1}>\r\n          <Button\r\n            variant={active === \"10\" ? \"contained\" : \"outlined\"}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            className={classes.margin}\r\n            onClick={() => setActive(\"10\")}\r\n          >\r\n            10Y\r\n          </Button>\r\n        </Box>\r\n        {seriesLength > 21 && (\r\n          <Box mr={1}>\r\n            <Button\r\n              variant={active === \"20\" ? \"contained\" : \"outlined\"}\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              className={classes.margin}\r\n              onClick={() => setActive(\"20\")}\r\n            >\r\n              20Y\r\n            </Button>\r\n          </Box>\r\n        )}\r\n        {seriesLength > 31 && (\r\n          <Box mr={1}>\r\n            <Button\r\n              variant={active === \"30\" ? \"contained\" : \"outlined\"}\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              className={classes.margin}\r\n              onClick={() => setActive(\"30\")}\r\n            >\r\n              30Y\r\n            </Button>\r\n          </Box>\r\n        )}\r\n        <Box mr={1}>\r\n          <Button\r\n            variant={active === \"all\" ? \"contained\" : \"outlined\"}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            className={classes.margin}\r\n            onClick={() => setActive(\"all\")}\r\n          >\r\n            All\r\n          </Button>\r\n        </Box>\r\n      </div>\r\n      <ReactApexChart\r\n        options={options}\r\n        series={series}\r\n        type=\"area\"\r\n        height={350}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TimeSeries;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core/\";\r\nimport TimeSeries from \"../Chart/TimeSeries\";\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  console.log(\"...\");\r\n}\r\n  const styles = {\r\n    Typography: { color: \"textPrimary\" },\r\n    root: { width: 700 },\r\n    media: { height: 240 },\r\n    containt: { maxWidth: 900 },\r\n  };\r\n\r\nconst UiCard = ({ data }) => {\r\n  let lastKey = Object.keys(data).pop().split(\"_\")[1];\r\n  let lastValue = data[Object.keys(data).pop()];\r\n\r\n  return (\r\n    <Card>\r\n      <CardActionArea onClick={handleClick}>\r\n        <CardMedia\r\n          style={styles.media}\r\n          image={require(`../../Image/${data.ImageName}`)}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" color=\"primary\">\r\n            {data.Idicator} ({lastKey})\r\n          </Typography>\r\n          <div>\r\n            Data from\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              color=\"primary\"\r\n              componet=\"span\"\r\n              display=\"inline\"\r\n            >\r\n              {` tradingeconomics `}\r\n            </Typography>\r\n            Last updated: Apr 8, 2020\r\n          </div>\r\n          <Box mt={3} mb={1}>\r\n            <Typography   display=\"inline\" variant=\"h3\">\r\n              {lastValue}\r\n            </Typography>\r\n            <Typography\r\n                  variant=\"subtitle1\"\r\n                  color=\"textSecondary\"\r\n                  display=\"inline\"\r\n                >\r\n                  {`  (${data.IndicatorUnit})`}\r\n                </Typography>\r\n          </Box>\r\n          <Typography variant=\"body1\" color=\"text.primary\">\r\n            {data.paragraph}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <TimeSeries data={data} />\r\n    </Card>\r\n  );\r\n};\r\nexport default React.memo(UiCard)\r\n\r\n\r\n     ","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Box, Collapse } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    spacing: [0, 2, 3, 5, 8],\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  expandPosition: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  typography: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"1rem\",\r\n    },\r\n  },\r\n  detail: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\n  const Population = {\r\n    population: 0,\r\n    unit: \"\",\r\n  };\r\nfunction CalculatePopulation(number) {\r\n  \r\n  if(number === null || number.length === 0 ) return null;\r\n  if (number < 1 && number !== null) {\r\n    Population.population = parseFloat(number) * 1000;\r\n    Population.unit = \"K\";\r\n  } else {\r\n    Population.population = parseFloat(number).toFixed(1);\r\n    Population.unit = \"M\";\r\n  }\r\n  return Population;\r\n}\r\n\r\nconst TitleCard = ({ titleDetail, cityContent }) => {\r\n  const Population = CalculatePopulation(titleDetail.Population);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() =>{\r\n\r\n\r\n    return () =>{\r\n      setExpanded(false);      \r\n    }\r\n  },[titleDetail, cityContent])\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  return (\r\n    <Box py={1}>\r\n      <Card bgcolor=\"primary\">\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h3\" color=\"primary\">\r\n            {titleDetail.Name}\r\n          </Typography>\r\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              align=\"justify\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {cityContent && (\r\n                <div dangerouslySetInnerHTML={{ __html: cityContent }} />\r\n              )}\r\n            </Typography>\r\n          </Collapse>\r\n          <div className={classes.expandPosition}>\r\n            <IconButton\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n              })}\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </CardContent>\r\n        <Divider variant=\"middle\" />\r\n        <div className={classes.content}>\r\n          <CardContent className={classes.detail}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              color=\"textSecondary\"\r\n              className={classes.typography}\r\n            >\r\n              Population\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"primary\"\r\n              className={classes.typography}\r\n            >\r\n              {`${Population.population}${Population.unit}`}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent className={classes.detail}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              color=\"textSecondary\"\r\n              className={classes.typography}\r\n            >\r\n              Median Age\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"primary\"\r\n              className={classes.typography}\r\n            >\r\n              {`${titleDetail.MedianAge} Year`}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent className={classes.detail}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              color=\"textSecondary\"\r\n              className={classes.typography}\r\n            >\r\n              Density\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"primary\"\r\n              className={classes.typography}\r\n            >\r\n              {`${titleDetail.Density} sq.km`}\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TitleCard from \"./TitleCard\";\r\n\r\nconst headTitle = {\r\n  Name: \"\",\r\n  Population: 0,\r\n  MedianAge: 0,\r\n  Density: 0,\r\n  Rank: 0,\r\n};\r\n\r\nconst getFirstPageExtract = (jsonResponse) => {\r\n  // You should probably add some validathin here to make sure pages exists\r\n  const pages = jsonResponse.query.pages;\r\n  const pageIds = Object.keys(pages);\r\n  // Here we only take the first response since we know there is only one.\r\n  const firstPageId = pageIds.length ? pageIds[0] : null;\r\n  return firstPageId ? pages[firstPageId].extract : null;\r\n};\r\n\r\nconst TitleData = ({ provinceData }) => {\r\n  const [titleDetail, setTitleDetail] = useState(headTitle);\r\n  const [cityContent, setCityContent] = useState(null);\r\n\r\n  const getCity = async (name) => {\r\n    const url = `https://en.wikipedia.org/w/api.php?action=query&origin=*&prop=extracts&format=json&exintro=&titles=${name}`;\r\n    const response = await fetch(url);\r\n    const jsonContent = await response.json();\r\n    const extract = getFirstPageExtract(jsonContent);\r\n    setCityContent(extract);\r\n  };\r\n  useEffect(\r\n    () => {\r\n      const firstRow = provinceData[0];\r\n      let Population = (Number(firstRow.Total) / 1000000).toFixed(3);\r\n      let Age = Number(firstRow.medianAge).toFixed(1);\r\n      let Density = Number(firstRow.Density).toFixed(1);\r\n      let Rank = Number(firstRow.Rank);\r\n      let Province = firstRow.Province;\r\n      let Search =\r\n        firstRow.Province === \"Thailand\" || firstRow.Province === \"Bangkok\"\r\n          ? firstRow.Province\r\n          : `${firstRow.Province}_Province`;\r\n      document.title = `${Search} - Demographic`;\r\n      getCity(Search);\r\n      setTitleDetail({\r\n        Name: Province,\r\n        Population,\r\n        MedianAge: Age,\r\n        Density,\r\n        Rank,\r\n      });\r\n    },\r\n    [provinceData],\r\n    [titleDetail]\r\n  );\r\n  return <TitleCard titleDetail={titleDetail} cityContent={cityContent} handleClick={false} />;\r\n};\r\n\r\nexport default TitleData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  List,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  Listroot: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  Listnested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst removeDuplicate = (listProvinces) => {\r\n  return listProvinces.filter((val, id, array) => array.indexOf(val) === id);\r\n};\r\n\r\nconst Filter = ({ provinceList, onChang }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [openC, setOpenC] = useState(false);\r\n  const [openN, setOpenN] = useState(false);\r\n  const [openNW, setOpenNW] = useState(false);\r\n  const [openS, setOpenS] = useState(false);\r\n  const [central, setCentral] = useState([]);\r\n  const [northern, setNorthern] = useState([]);\r\n  const [northeastern, setNortheastern] = useState([]);\r\n  const [southern, setSouthern] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickC = () => {\r\n    setOpenC(!openC);\r\n  };\r\n  const handleClickN = () => {\r\n    setOpenN(!openN);\r\n  };\r\n  const handleClickNW = () => {\r\n    setOpenNW(!openNW);\r\n  };\r\n  const handleClickS = () => {\r\n    setOpenS(!openS);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let centralProvince = provinceList\r\n      .filter((val) => val.region === \"Central\")\r\n      .map((val) => val.Province);\r\n    let northernProvince = provinceList\r\n      .filter((val) => val.region === \"Northern\")\r\n      .map((val) => val.Province);\r\n    let northeasternProvince = provinceList\r\n      .filter((val) => val.region === \"Northeastern\")\r\n      .map((val) => val.Province);\r\n    let southernProvince = provinceList\r\n      .filter((val) => val.region === \"Southern\")\r\n      .map((val) => val.Province);\r\n    setCentral(removeDuplicate(centralProvince));\r\n    setNorthern(removeDuplicate(northernProvince));\r\n    setNortheastern(removeDuplicate(northeasternProvince));\r\n    setSouthern(removeDuplicate(southernProvince));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <Typography variant=\"h6\" noWrap>\r\n              <Link href=\"#\" color=\"inherit\" underline=\"none\" onClick={() => onChang('Thailand')}>\r\n                Demographic\r\n              </Link>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"ltr\" ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.drawerContainer}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-labelledby=\"nested-list-subheader\"\r\n              subheader={\r\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                  Select Region\r\n                </ListSubheader>\r\n              }\r\n              className={classes.Listroot}\r\n            >\r\n              <ListItem button onClick={() => handleClickC()}>\r\n                <ListItemIcon>\r\n                  <StarBorder />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Central\" />\r\n                {openC ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {central.map((val, id) => (\r\n                <Collapse in={openC} key={id} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItem\r\n                      button\r\n                      className={classes.Listnested}\r\n                      onClick={(event) => onChang(val)}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <LocationCityIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={val} />\r\n                    </ListItem>\r\n                  </List>\r\n                </Collapse>\r\n              ))}\r\n              <ListItem button onClick={() => handleClickN()}>\r\n                <ListItemIcon>\r\n                  <StarBorder />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Northern\" />\r\n                {openN ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {northern.map((val, id) => (\r\n                <Collapse in={openN} key={id} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItem\r\n                      button\r\n                      className={classes.Listnested}\r\n                      onClick={(event) => onChang(val)}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <LocationCityIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={val} />\r\n                    </ListItem>\r\n                  </List>\r\n                </Collapse>\r\n              ))}\r\n              <ListItem button onClick={() => handleClickNW()}>\r\n                <ListItemIcon>\r\n                  <StarBorder />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Northeaster\" />\r\n                {openNW ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {northeastern.map((val, id) => (\r\n                <Collapse in={openNW} key={id} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItem\r\n                      button\r\n                      className={classes.Listnested}\r\n                      onClick={(event) => onChang(val)}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <LocationCityIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={val} />\r\n                    </ListItem>\r\n                  </List>\r\n                </Collapse>\r\n              ))}\r\n              <ListItem button onClick={() => handleClickS()}>\r\n                <ListItemIcon>\r\n                  <StarBorder />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Southern\"} />\r\n                {openS ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {southern.map((val, id) => (\r\n                <Collapse in={openS} key={id} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItem\r\n                      button\r\n                      className={classes.Listnested}\r\n                      onClick={(event) => onChang(val)}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <LocationCityIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={val} />\r\n                    </ListItem>\r\n                  </List>\r\n                </Collapse>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\n\r\nfunction findMaxvalue(min, max){\r\n  const Min = Math.abs(min);\r\n  if(max > Min){\r\n    return max\r\n  }else{\r\n    return Min\r\n  }\r\n}\r\n\r\nconst Pyramid = ({ total, male, female }) => {\r\n  let numberMale = male.map(Number);\r\n  let numberFemale = female.map(Number);\r\n  let femaleReversed = numberFemale.reverse();\r\n  const dataFemale = femaleReversed.map((s) => -Math.abs(s));\r\n  const dataMale = numberMale.reverse();\r\n\r\n  const maxYaxis = Math.max(...numberMale);\r\n  const minYaxis = Math.min(...dataFemale);\r\n\r\n  const Yaxis = findMaxvalue(minYaxis, maxYaxis);\r\n\r\n   const series = [\r\n    {\r\n      name: \"Females\",\r\n      data: dataFemale,\r\n    },\r\n    {\r\n      name: \"Males\",\r\n      data: dataMale,\r\n    },\r\n  ];\r\n  const options = {\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 440,\r\n      stacked: true,\r\n    },\r\n    colors: [\"#008FFB\", \"#FF4560\"],\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: \"100%\",\r\n        dataLabels: {\r\n          position: \"top\",\r\n        },\r\n      },\r\n    },\r\n    dataLabels: {\r\n      formatter: function (val) {\r\n        return Math.abs(val);\r\n      },\r\n      enabled: true,\r\n      style: {\r\n        fontSize: \"9px\",\r\n        colors: [\"#333\"],\r\n      },\r\n      offsetX: 40,\r\n    },\r\n    stroke: {\r\n      width: 1,\r\n      colors: [\"#fff\"],\r\n    },\r\n    grid: {\r\n      xaxis: {\r\n        lines: {\r\n          show: false,\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      min: -Yaxis,\r\n      max: Yaxis,\r\n      forceNiceScale: true,\r\n      floating: false,\r\n      title: {\r\n        // text: 'Age',\r\n      },\r\n    },\r\n    tooltip: {\r\n      shared: false,\r\n      x: {\r\n        formatter: function (val) {\r\n          return val;\r\n        },\r\n      },\r\n      y: {\r\n        formatter: function (val) {\r\n          return Math.abs(val);\r\n        },\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        \"100+\",\r\n        \"95-99\",\r\n        \"90-94\",\r\n        \"85-89\",\r\n        \"80-84\",\r\n        \"75-79\",\r\n        \"70-74\",\r\n        \"65-69\",\r\n        \"60-64\",\r\n        \"55-59\",\r\n        \"50-54\",\r\n        \"45-49\",\r\n        \"40-44\",\r\n        \"35-39\",\r\n        \"30-34\",\r\n        \"25-29\",\r\n        \"20-24\",\r\n        \"15-19\",\r\n        \"10-14\",\r\n        \"5-9\",\r\n        \"0-4\",\r\n      ],\r\n      title: {\r\n        text: \"Total\",\r\n      },\r\n      labels: {\r\n        formatter: function (val) {\r\n          return Math.abs(Math.round(val)) + \"\";\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return(\r\n\r\n      <ReactApexChart options={options} series={series} type=\"bar\" height={600} />\r\n  )\r\n};\r\n\r\nexport default Pyramid;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Pyramid from '../Chart/Pyramid'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    transitionDuration: '0.3s',\r\n  },\r\n});\r\n\r\nconst CardPyramid = ({ total, male, female, provinceName}) => {\r\n   const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n          Pyramid Population of <b>{provinceName}</b>\r\n          </Typography>\r\n        </CardContent>\r\n        <CardContent>\r\n            <Pyramid total={total} male={male} female={female} />\r\n        </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardPyramid;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst PieChart = ({ productive }) => {\r\n  const series = [\r\n    productive.preReProductive,\r\n    productive.reProductive,\r\n    productive.postProductive,\r\n  ];\r\n  const options = {\r\n    chart: {\r\n      width: 960,\r\n      type: \"pie\",\r\n    },\r\n     colors: ['#2196f3', '#90caf9', '#0d47a1'],\r\n    labels: [\r\n      \"Pre-Reproductive(0-14)\",\r\n      \"Reproductive(15-44)\",\r\n      \"Post-Reproductive(45-100+)\",\r\n    ],\r\n    responsive: [\r\n      {\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 480,\r\n          },\r\n          legend: {\r\n            position: \"bottom\",\r\n            fontWeight: 600,\r\n            \r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Section>\r\n        {productive.Name !== \"\" && (\r\n          <ReactApexChart\r\n            options={options}\r\n            series={series}\r\n            type=\"pie\"\r\n            width={500}\r\n          />\r\n        )}\r\n      </Section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PieChart from '../Chart/PieChart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    fontSize: \"2rem\",\r\n    color: \"#0d47a1\",\r\n    display: \"inline\",\r\n    fontWeight: \"500\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"1.1rem\",\r\n    },\r\n  },\r\n  head: {\r\n    fontSize: \"2rem\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"1rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction formatNumbertoDecimal(number) {\r\n  if (number === null) return null;\r\n  else\r\n    return new Intl.NumberFormat(\"en-ca\", { style: \"decimal\" }).format(number);\r\n}\r\n\r\nconst productiveObject = {\r\n  preProductive: null,\r\n  reProductive: null,\r\n  postProductive: null,\r\n  totalPopulation: null,\r\n  totalUndefine: null,\r\n};\r\n\r\nconst PieCard = ({ productive }) => {\r\n  const [productiveDetail, setProductiveDetail] = useState([productiveObject]);\r\n\r\n  useEffect(() => {\r\n    setProductiveDetail({\r\n      preProductive: formatNumbertoDecimal(productive.preReProductive),\r\n      reProductive: formatNumbertoDecimal(productive.reProductive),\r\n      postProductive: formatNumbertoDecimal(productive.postProductive),\r\n      totalPopulation: formatNumbertoDecimal(productive.Total),\r\n      totalUndefine: formatNumbertoDecimal(productive.unDefine),\r\n    });\r\n    return () => {\r\n      setProductiveDetail({\r\n        preProductive: 0,\r\n        reProductive: 0,\r\n        postProductive: 0,\r\n        totalPopulation: 0,\r\n        totalUndefine: 0,\r\n      });\r\n    };\r\n  }, [productive]);\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Box pt={3}>\r\n        <Card>\r\n          <Box py={4} px={7} align=\"center\">\r\n            <Typography\r\n              color=\"secondary\"\r\n              variant=\"h5\"\r\n              display=\"inline\"\r\n              className={classes.head}\r\n            >\r\n              Total population of\r\n              <Typography\r\n                varaint=\"h1\"\r\n                color=\"primary\"\r\n                align=\"center\"\r\n                className={classes.typography}\r\n              >\r\n                {` ${productive.Name} `}\r\n              </Typography>\r\n              is{\" \"}\r\n              <Typography\r\n                className={classes.typography}\r\n              >{` ${productiveDetail.totalPopulation} `}</Typography>\r\n              and have people are not registered{\" \"}\r\n              <Typography\r\n                className={classes.typography}\r\n              >{` ${productiveDetail.totalUndefine} `}</Typography>\r\n              and it has the{\" \"}\r\n              <Typography className={classes.typography}>{` ${Number(\r\n                productive.Rank\r\n              ).toFixed(0)}th `}</Typography>\r\n              largest population in the{\" \"}\r\n              {productive.Name === \"Thailand\" ? ` world ` : ` country `} with\r\n              the population of the\r\n              <Typography\r\n                className={classes.typography}\r\n              >{` pre-reproductive `}</Typography>\r\n              at{\" \"}\r\n              <Typography\r\n                className={classes.typography}\r\n              >{` ${productiveDetail.preProductive} `}</Typography>\r\n              and{\" \"}\r\n              <Typography\r\n                className={classes.typography}\r\n              >{` reproductive `}</Typography>\r\n              at{\" \"}\r\n              <Typography\r\n                className={classes.typography}\r\n              >{` ${productiveDetail.reProductive} `}</Typography>{\" \"}\r\n              and\r\n              <Typography\r\n                className={classes.typography}\r\n              >{` post-reproductive `}</Typography>\r\n              at{\" \"}\r\n              <Typography\r\n                className={classes.typography}\r\n              >{` ${productiveDetail.postProductive} `}</Typography>\r\n            </Typography>\r\n          </Box>\r\n          <PieChart productive={productive} />\r\n        </Card>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PieCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CardPyramid from './CardPyramid';\r\nimport PieCard from './PieCard';\r\n\r\nfunction filterData(param) {\r\n  let filter = Object.keys(param)\r\n    .filter(\r\n      (item) =>\r\n        item !== \"ID\" &&\r\n        item !== \"region\" &&\r\n        item !== \"Province\" &&\r\n        item !== \"Density\" &&\r\n        item !== \"Sex\" &&\r\n        item !== \"medianAge\" &&\r\n        item !== \"Rank\" &&\r\n        item !== \"Total\" &&\r\n        item !== \"Undefine\"\r\n    )\r\n    .map((item) => {\r\n      return param[item];\r\n    });\r\n  return filter;\r\n}\r\n\r\nfunction selectUndefinePeople(provinceData){\r\n  if(provinceData === null || provinceData.length === 0) return null\r\n  else return Object.keys(provinceData).filter(column => column === 'Undefine').map((column) => provinceData[column])[0];\r\n}\r\n\r\n\r\nfunction summaryOfPrereproductive(provinceData){\r\n  if(provinceData.length === 0 || provinceData === null) return null;\r\n  else return Object.keys(provinceData).filter(column => column === 'preReproductive_0-4' || \r\n      column === 'preReproductive_5-9' ||\r\n      column === 'preReproductive_10-14').map(column => provinceData[column]).reduce((prev, cur) => Number(prev) + Number(cur))\r\n}\r\n\r\nfunction summaryOfReproductive(provinceData){\r\n  if(provinceData.length === 0 || provinceData === null) return null;\r\n  else return Object.keys(provinceData).filter(column => column === 'Reproductive_15-19' || \r\n      column === 'Reproductive_20-24' ||\r\n      column === 'Reproductive_25-29' ||\r\n      column === 'Reproductive_30-34' ||\r\n      column === 'Reproductive_35-39' ||\r\n      column === 'Reproductive_40-44' )\r\n      .map(column => provinceData[column]).reduce((prev, cur) => Number(prev) + Number(cur))\r\n}\r\nfunction summaryOfPostreproductive(provinceData){\r\n  if(provinceData.length === 0 || provinceData === null) return null;\r\n  else return Object.keys(provinceData).filter(column => column === 'postReproductive_45-49' || \r\n      column === 'postReproductive_50-54' ||\r\n      column === 'postReproductive_55-59' ||\r\n      column === 'postReproductive_60-64' ||\r\n      column === 'postReproductive_65-69' ||\r\n      column === 'postReproductive_70-74' ||\r\n      column === 'postReproductive_75-79' ||\r\n      column === 'postReproductive_80-84' ||\r\n      column === 'postReproductive_85-89' ||\r\n      column === 'postReproductive_90-94' ||\r\n      column === 'postReproductive_95-99' ||\r\n      column === 'postReproductive_100+' )\r\n      .map(column => provinceData[column]).reduce((prev, cur) => Number(prev) + Number(cur))\r\n}\r\n\r\nconst initPopulation = {\r\n  Name:'',\r\n  Total:'',\r\n  preReProductive:'',\r\n  reProductive:'',\r\n  postProductive:'',\r\n  Rank:'',\r\n  unDefine:''\r\n\r\n}\r\n\r\nconst PyramidData = ({ provinceData }) => {\r\n  const [total, setTotal] = useState([]);\r\n  const [male, setMale] = useState([]);\r\n  const [female, setFeMale] = useState([]);\r\n\r\n  const [productive, setProductive] = useState(initPopulation);\r\n\r\n  useEffect(() => {\r\n    const [Total, Male, Female] = provinceData;\r\n    \r\n    const spitTotal = filterData(Total);\r\n    const spitMale = filterData(Male);\r\n    const spitFemale = filterData(Female);\r\n\r\n    setProductive({\r\n      Name: provinceData[0].Province,\r\n      Total: provinceData[0].Total,\r\n      preReProductive: summaryOfPrereproductive(Total),\r\n      reProductive: summaryOfReproductive(Total),\r\n      postProductive: summaryOfPostreproductive(Total),\r\n      Rank: provinceData[0].Rank,\r\n      unDefine: provinceData[0].Undefine\r\n    }\r\n\r\n    )\r\n    setTotal(spitTotal);\r\n    setMale(spitMale);\r\n    setFeMale(spitFemale);\r\n    \r\n  }, [provinceData]);\r\n\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <CardPyramid total={total} male={male} female={female} provinceName={provinceData[0].Province}/>\r\n        <PieCard productive={productive} />\r\n      </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PyramidData;\r\n","import React, { Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LocationCity from \"@material-ui/icons/LocationCity\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst Breadcrumb = ({ province, onChang }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n        <Link\r\n          href=\"#\"\r\n          underline=\"hover\"\r\n          color=\"primary\"\r\n          onClick={() => onChang('Thailand')}\r\n          className={classes.link}\r\n        >\r\n          <HomeIcon className={classes.icon} />\r\n          Thailand\r\n        </Link>\r\n        {province !== \"Thailand\" ? (\r\n          <Typography color=\"secondary\" className={classes.link}>\r\n            <LocationCity className={classes.icon} />\r\n            {province}\r\n          </Typography>\r\n        ) : null}\r\n      </Breadcrumbs>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport UiCard from \"../Card/UiCard\";\r\nimport TitleData from \"../Card/TitleData\";\r\nimport Filter from \"./Filter\";\r\nimport PyramidData from \"../Card/PyramidData\";\r\nimport Breadcrumb from \"../Card/Breadcrumb\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // blue and grey play nicely together.\r\n      main: \"#2196f3\",\r\n      light: \"#e3f2fd\",\r\n      dark: \"#0d47a1\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      // This is grey\r\n      main: \"#9e9e9e\",\r\n      light: \"#e0e0e0\",\r\n      dark: \"#212121\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default ({ nationData, provinceList }) => {\r\n  const [province, setProvince] = useState(\"Thailand\");\r\n  const [provinceData, setProvinceData] = useState([]);\r\n  const [isLoad, setIsLoad] = useState(true);\r\n\r\n  const thailandData = useMemo(() =>{\r\n    return nationData\r\n  },[]);\r\n\r\n  \r\n  useEffect(() => {\r\n    console.log(isLoad);\r\n    let data = provinceList.filter((val) => val.Province === province);\r\n    setProvinceData(data);\r\n    setIsLoad(false);\r\n  }, [province]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={theme}>\r\n        <Box bgcolor=\"secondary.light\">\r\n          <Filter\r\n            provinceList={provinceList}\r\n            onChang={(value) => setProvince(value)}\r\n          />\r\n          <Box py={12}>\r\n            <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n              <Grid item xs={12} xl={7} lg={7} md={10} sm={12} spaceing={10}>\r\n                <Breadcrumb\r\n                  province={province}\r\n                  onChang={(value) => setProvince(value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} xl={7} lg={7} md={10} sm={12} spaceing={10}>\r\n                {isLoad ? (\r\n                  <div>load.....</div>\r\n                ) : (\r\n                  <TitleData provinceData={provinceData} />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} xl={7} lg={7} md={10} sm={12} spaceing={10}>\r\n                {isLoad ? null : <PyramidData provinceData={provinceData} />}\r\n              </Grid>\r\n              {province === \"Thailand\" &&\r\n                thailandData\r\n                  .filter(\r\n                    (data) =>\r\n                      data.IndicatorName !== \"Urban_population\" &&\r\n                      data.IndicatorName !== \"Rural_population\" &&\r\n                      data.IndicatorName !== \"Population_density\" &&\r\n                      data.IndicatorName !== \"Survival_to_age_65_female\" &&\r\n                      data.IndicatorName !== \"Survival_to_age65Male\"\r\n                  )\r\n                  .map((data) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      xl={7}\r\n                      lg={7}\r\n                      md={10}\r\n                      sm={12}\r\n                      key={data.IndicatorName}\r\n                    >\r\n                      <UiCard data={data} />\r\n                    </Grid>\r\n                  ))}\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Header } from \"../Layout\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  media: {\r\n    height: 420,\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  typography: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"1rem\",\r\n    },\r\n  },\r\n  detail: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Skeloton = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <Box bgcolor=\"#e0e0e0\" style={{ height: \"100%\" }} pt={5}>\r\n        <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n          <Grid item xs={12} xl={7} lg={7} md={10} sm={12} spaceing={10}>\r\n            <Card className={classes.card}>\r\n              <Skeleton width=\"100%\">\r\n                <Typography component=\"div\" key={\"h3\"} variant={\"h3\"}>\r\n                  .\r\n                </Typography>\r\n              </Skeleton>\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n                className={classes.media}\r\n              />\r\n              <div className={classes.content}>\r\n                <CardContent className={classes.detail}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.typography}\r\n                  >\r\n                    Population\r\n                  </Typography>\r\n                  <Skeleton width=\"100%\">\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      color=\"primary\"\r\n                      className={classes.typography}\r\n                    >\r\n                      .\r\n                    </Typography>\r\n                  </Skeleton>\r\n                </CardContent>\r\n                <CardContent className={classes.detail}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.typography}\r\n                  >\r\n                    Median Age\r\n                  </Typography>\r\n                  <Skeleton width=\"100%\">\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      color=\"primary\"\r\n                      className={classes.typography}\r\n                    >\r\n                      .\r\n                    </Typography>\r\n                  </Skeleton>\r\n                </CardContent>\r\n                <CardContent className={classes.detail}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.typography}\r\n                  >\r\n                    Density\r\n                  </Typography>\r\n                  <Skeleton width=\"100%\">\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      color=\"primary\"\r\n                      className={classes.typography}\r\n                    >\r\n                      .\r\n                    </Typography>\r\n                  </Skeleton>\r\n                </CardContent>\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} xl={7} lg={7} md={10} sm={12} spaceing={10}>\r\n            <Card className={classes.card}>\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n                className={classes.media}\r\n              />\r\n              <Skeleton width=\"25%\">\r\n                <Typography component=\"div\" key={\"h3\"} variant={\"h3\"}>\r\n                  .\r\n                </Typography>\r\n              </Skeleton>\r\n               <Skeleton width=\"40%\">\r\n                <Typography component=\"div\" key={\"h5\"} variant={\"h5\"}>\r\n                  .\r\n                </Typography>\r\n              </Skeleton>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Skeloton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Ladning from \"../Landing\";\r\nimport Skeloton from '../skeleton/Skeloton'\r\nconst FetchData = () => {\r\n  const [provinceList, setProvince] = useState([]);\r\n  const [nationData, setNationData] = useState([]);\r\n  const [isLoad, setIsLoad] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const callApi = async () => {\r\n      console.log(\"callApi\");\r\n\r\n      const response_provinces = await fetch(\r\n        \"https://raw.githubusercontent.com/chakkaphong/demographic/master/data.json\"\r\n      );\r\n      const response_nation_data = await fetch(\r\n        \"https://raw.githubusercontent.com/chakkaphong/demographic/master/Thai_Detail.json\"\r\n      );\r\n      const provinces = await response_provinces.json();\r\n      const nationData = await response_nation_data.json();\r\n      if (mounted) {\r\n        setProvince(provinces);\r\n        setNationData(nationData);\r\n        setIsLoad(false);\r\n      }\r\n    };\r\n    callApi();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {isLoad ? <Skeloton /> : <Ladning nationData={nationData} provinceList={provinceList} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchData;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Header,Footer } from \"./Components/Layout\";\nimport FetchData from './Components/CallApi/FetchData'\n\nconst Contianer = styled.div`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    overflow: hidden;\n  }\n`;\n\nfunction App() {\n  return (\n    <Contianer>\n      <FetchData />\n    </Contianer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}