{"version":3,"sources":["Image sync /^/.*$","Image/babies.jpg","Image/co2.jpg","Image/density.jpg","Image/energy_sector.jpg","Image/grand.jpg","Image/pm2.jpg","Image/urban-rural.jpg","Components/Layout/Footer.js","Components/Layout/Header.js","Components/Chart/TimeSeries.js","Components/Card/UiCard.js","Components/Card/TitleCard.js","Components/Card/TitleData.jsx","Components/Landing/Filter.jsx","Components/Chart/Pyramid.js","Components/Card/CardPyramid.jsx","Components/Card/PyramidData.js","Components/Card/Breadcrumb.js","Components/Landing/index.js","Components/skeleton/Skeloton.js","Components/CallApi/FetchData.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","props","theme","createMuiTheme","palette","primary","main","light","dark","contrastText","secondary","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","classes","className","ThemeProvider","AppBar","position","color","Toolbar","IconButton","edge","aria-label","Typography","variant","TimeSeries","data","filterData","filter","item","Series","yearSplit","value","split","series","name","IndicatorName","options","chart","type","stacked","height","zoom","enabled","autoScaleYaxis","colors","toolbar","autoSelected","dataLabels","markers","size","text","align","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","yaxis","xaxis","categories","tooltip","shared","handleClick","event","preventDefault","console","log","styles","width","media","containt","maxWidth","React","memo","lastKey","pop","lastValue","Card","CardActionArea","onClick","CardMedia","style","image","require","ImageName","CardContent","gutterBottom","Idicator","componet","display","Box","mt","mb","IndicatorUnit","paragraph","Math","random","content","justifyContent","typography","breakpoints","down","fontSize","detail","flexDirection","alignItems","titleDetail","cityContent","Population","number","population","unit","parseFloat","toFixed","CalculatePopulation","useState","expand","setExpand","useEffect","py","bgcolor","Name","dangerouslySetInnerHTML","__html","Divider","MedianAge","Density","headTitle","Rank","getFirstPageExtract","jsonResponse","pages","query","pageIds","firstPageId","length","extract","TitleData","provinceData","setTitleDetail","setCityContent","getCity","a","url","fetch","response","json","jsonContent","firstRow","Number","Total","Age","medianAge","Province","Search","document","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","drawerHeader","padding","mixins","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","backgroundColor","background","paper","paddingLeft","removeDuplicate","listProvinces","val","array","indexOf","Filter","provinceList","onChang","useTheme","openC","setOpenC","openN","setOpenN","openNW","setOpenNW","openS","setOpenS","setRegions","central","setCentral","northern","setNorthern","northeastern","setNortheastern","southern","setSouthern","open","setOpen","regions","region","centralProvince","northernProvince","northeasternProvince","southernProvince","Fragment","CssBaseline","clsx","appBarShift","hide","noWrap","Drawer","anchor","direction","List","component","aria-labelledby","subheader","ListSubheader","Listroot","ListItem","button","ListItemIcon","ListItemText","Collapse","in","key","timeout","unmountOnExit","disablePadding","Listnested","Pyramid","total","male","female","numberMale","dataFemale","reverse","s","abs","dataMale","maxYaxis","max","Yaxis","min","Min","findMaxvalue","plotOptions","bar","horizontal","barHeight","formatter","offsetX","stroke","grid","lines","show","forceNiceScale","floating","x","y","labels","round","transitionDuration","CardPyramid","param","PyramidData","setTotal","setMale","setFeMale","Male","Female","spitTotal","spitMale","spitFemale","link","icon","Breadcrumb","province","Breadcrumbs","Link","href","underline","nationData","setProvince","setProvinceData","isLoad","setIsLoad","thailandData","useMemo","Grid","container","justify","xs","xl","lg","md","sm","spaceing","card","margin","Skeloton","Skeleton","animation","FetchData","setNationData","mounted","response_provinces","response_nation_data","provinces","callApi","Contianer","styled","div","App","Header","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.61697feb.chunk.js","sourcesContent":["var map = {\n\t\"./babies.jpg\": 101,\n\t\"./co2.jpg\": 102,\n\t\"./density.jpg\": 103,\n\t\"./energy_sector.jpg\": 104,\n\t\"./grand.jpg\": 105,\n\t\"./pm2.jpg\": 106,\n\t\"./urban-rural.jpg\": 107\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 100;","module.exports = __webpack_public_path__ + \"static/media/babies.b0c0d4a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/co2.acfdf77d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/density.52791f27.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy_sector.2e60d0ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grand.c19a5b2f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pm2.3df65bd9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/urban-rural.07bab21d.jpg\";","import React from 'react'\r\n\r\nexport default props =>\r\n    <div>\r\n        <h1>\r\n            Footer\r\n        </h1>\r\n    </div>","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // blue and grey play nicely together.\r\n      main: \"#2196f3\",\r\n      light: \"#e3f2fd\",\r\n      dark: \"#0d47a1\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      // This is grey\r\n      main: \"#9e9e9e\",\r\n      light: \"#e0e0e0\",\r\n      dark: \"#212121\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <ThemeProvider theme={theme}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Demographic\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nconst TimeSeries = ({ data }) => {\r\n  const filterData = Object.keys(data).filter(\r\n    (item) =>\r\n      item !== \"CountryName\" &&\r\n      item !== \"CountryCode\" &&\r\n      item !== \"IndicatorName\" &&\r\n      item !== \"IndicatorUnit\" &&\r\n      item !== 'Idicator' &&\r\n      item !== 'paragraph' &&\r\n      item !== 'ImageName'\r\n  );\r\n  const Series = filterData.map((item) => {\r\n    return data[item];\r\n  });\r\n\r\n  const yearSplit = filterData.map(value =>value.split(\"_\")[1])\r\n\r\n  const series = [\r\n    {\r\n      name: data.IndicatorName,\r\n      data: Series,\r\n    },\r\n  ];\r\n  const options = {\r\n    chart: {\r\n      type: \"area\",\r\n      stacked: false,\r\n      height: 350,\r\n      zoom: {\r\n        type: \"x\",\r\n        enabled: true,\r\n        autoScaleYaxis: true,\r\n      },\r\n      colors: \"#E91E63\",\r\n      toolbar: {\r\n        autoSelected: \"zoom\",\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    title: {\r\n      text: \"\",\r\n      align: \"left\",\r\n    },\r\n    fill: {\r\n      colors:\"#2196f3\",\r\n      type: \"gradient\",\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        inverseColors: false,\r\n        opacityFrom: 0.5,\r\n        opacityTo: 0.3,\r\n        stops: [0, 90, 100],\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: \"Price\",\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: yearSplit,\r\n    },\r\n     tooltip: {\r\n                shared: false,\r\n        \r\n                  }\r\n  };\r\n  return (\r\n    <ReactApexChart\r\n      options={options}\r\n      series={series}\r\n      type=\"area\"\r\n      height={350}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TimeSeries;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core/\";\r\nimport TimeSeries from \"../Chart/TimeSeries\";\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  console.log(\"...\");\r\n}\r\n  const styles = {\r\n    Typography: { color: \"textPrimary\" },\r\n    root: { width: 700 },\r\n    media: { height: 240 },\r\n    containt: { maxWidth: 900 },\r\n  };\r\n\r\nconst UiCard = ({ data }) => {\r\n  let lastKey = Object.keys(data).pop().split(\"_\")[1];\r\n  let lastValue = data[Object.keys(data).pop()];\r\n\r\n  return (\r\n    <Card>\r\n      <CardActionArea onClick={handleClick}>\r\n        <CardMedia\r\n          style={styles.media}\r\n          image={require(`../../Image/${data.ImageName}`)}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" color=\"primary\">\r\n            {data.Idicator} ({lastKey})\r\n          </Typography>\r\n          <div>\r\n            Data from\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              color=\"primary\"\r\n              componet=\"span\"\r\n              display=\"inline\"\r\n            >\r\n              {` tradingeconomics `}\r\n            </Typography>\r\n            Last updated: Apr 8, 2020\r\n          </div>\r\n          <Box mt={3} mb={1}>\r\n            <Typography   display=\"inline\" variant=\"h3\">\r\n              {lastValue}\r\n            </Typography>\r\n            <Typography\r\n                  variant=\"subtitle1\"\r\n                  color=\"textSecondary\"\r\n                  display=\"inline\"\r\n                >\r\n                  {`  (${data.IndicatorUnit})`}\r\n                </Typography>\r\n          </Box>\r\n          <Typography variant=\"body1\" color=\"text.primary\">\r\n            {data.paragraph}{Math.random()}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <TimeSeries data={data} />\r\n    </Card>\r\n  );\r\n};\r\nexport default React.memo(UiCard)\r\n\r\n\r\n     ","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ShowMoreText from \"react-show-more-text\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    spacing: [0, 2, 3, 5, 8],\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  typography: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"1rem\",\r\n    },\r\n  },\r\n  detail: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nfunction CalculatePopulation(number) {\r\n  const Population = {\r\n    population: 0,\r\n    unit: \"\",\r\n  };\r\n  if (number < 1 && number !== null) {\r\n    Population.population = parseFloat(number) * 1000;\r\n    Population.unit = \"K\";\r\n  } else {\r\n    Population.population = parseFloat(number).toFixed(1);\r\n    Population.unit = \"M\";\r\n  }\r\n  return Population;\r\n}\r\n\r\nconst TitleCard = ({ titleDetail, cityContent, handleClick }) => {\r\n  const Population = CalculatePopulation(titleDetail.Population);\r\n  const [expand, setExpand] = useState(false);\r\n  const number = Math.random();\r\n  const onClick = () => {\r\n    setExpand(!expand);\r\n  };\r\n  useEffect(() => {\r\n    onClick();\r\n    return () => {\r\n      setExpand(false);\r\n    };\r\n  }, [titleDetail]);\r\n  const classes = useStyles();\r\n  return (\r\n    <Box py={1}>\r\n      <Card bgcolor=\"primary\">\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h3\" color=\"primary\">\r\n            {titleDetail.Name}\r\n          </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              {cityContent && (\r\n                <div dangerouslySetInnerHTML={{ __html: cityContent }} />\r\n              )}\r\n            </Typography>\r\n        </CardContent>\r\n        <Divider variant=\"middle\" />\r\n        <div className={classes.content}>\r\n          <CardContent className={classes.detail}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              color=\"textSecondary\"\r\n              className={classes.typography}\r\n            >\r\n              Population\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"primary\"\r\n              className={classes.typography}\r\n            >\r\n              {`${Population.population}${Population.unit}`}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent className={classes.detail}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              color=\"textSecondary\"\r\n              className={classes.typography}\r\n            >\r\n              Median Age\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"primary\"\r\n              className={classes.typography}\r\n            >\r\n              {`${titleDetail.MedianAge} Year`}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent className={classes.detail}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              color=\"textSecondary\"\r\n              className={classes.typography}\r\n            >\r\n              Density\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"primary\"\r\n              className={classes.typography}\r\n            >\r\n              {`${titleDetail.Density} sq. km`}\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TitleCard from \"./TitleCard\";\r\n\r\nconst headTitle = {\r\n  Name: \"\",\r\n  Population: 0,\r\n  MedianAge: 0,\r\n  Density: 0,\r\n  Rank: 0,\r\n};\r\n\r\nconst getFirstPageExtract = (jsonResponse) => {\r\n  // You should probably add some validathin here to make sure pages exists\r\n  const pages = jsonResponse.query.pages;\r\n  const pageIds = Object.keys(pages);\r\n  // Here we only take the first response since we know there is only one.\r\n  const firstPageId = pageIds.length ? pageIds[0] : null;\r\n  return firstPageId ? pages[firstPageId].extract : null;\r\n};\r\n\r\nconst TitleData = ({ provinceData }) => {\r\n  const [titleDetail, setTitleDetail] = useState(headTitle);\r\n  const [cityContent, setCityContent] = useState(null);\r\n\r\n  const getCity = async (name) => {\r\n    const url = `https://en.wikipedia.org/w/api.php?action=query&origin=*&prop=extracts&format=json&exintro=&titles=${name}`;\r\n    const response = await fetch(url);\r\n    const jsonContent = await response.json();\r\n    const extract = getFirstPageExtract(jsonContent);\r\n    setCityContent(extract);\r\n  };\r\n  useEffect(\r\n    () => {\r\n      const firstRow = provinceData[0];\r\n      let Population = (Number(firstRow.Total) / 1000000).toFixed(3);\r\n      let Age = Number(firstRow.medianAge).toFixed(1);\r\n      let Density = Number(firstRow.Density).toFixed(1);\r\n      let Rank = Number(firstRow.Rank);\r\n      let Province = firstRow.Province;\r\n      let Search =\r\n        firstRow.Province === \"Thailand\" || firstRow.Province === \"Bangkok\"\r\n          ? firstRow.Province\r\n          : `${firstRow.Province}_Province`;\r\n      document.title = `${Search} - Demographic`;\r\n      getCity(Search);\r\n      setTitleDetail({\r\n        Name: Province,\r\n        Population,\r\n        MedianAge: Age,\r\n        Density,\r\n        Rank,\r\n      });\r\n    },\r\n    [provinceData],\r\n    [titleDetail]\r\n  );\r\n  return <TitleCard titleDetail={titleDetail} cityContent={cityContent} handleClick={false} />;\r\n};\r\n\r\nexport default TitleData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme  } from \"@material-ui/core/styles\";\r\nimport {\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  List,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport clsx from 'clsx';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';;\r\n\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n   appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  Listroot: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  Listnested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst removeDuplicate = (listProvinces) => {\r\n  return listProvinces.filter((val, id, array) => array.indexOf(val) === id);\r\n};\r\n\r\nconst Filter = ({ provinceList, onChang }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [openC, setOpenC] = useState(false);\r\n  const [openN, setOpenN] = useState(false);\r\n  const [openNW, setOpenNW] = useState(false);\r\n  const [openS, setOpenS] = useState(false);\r\n  const [regions, setRegions] = useState([]);\r\n  const [central, setCentral] = useState([]);\r\n  const [northern, setNorthern] = useState([]);\r\n  const [northeastern, setNortheastern] = useState([]);\r\n  const [southern, setSouthern] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickC = () => {\r\n    setOpenC(!openC);\r\n  };\r\n  const handleClickN = () => {\r\n    setOpenN(!openN);\r\n  };\r\n  const handleClickNW = () => {\r\n    setOpenNW(!openNW);\r\n  };\r\n  const handleClickS = () => {\r\n    setOpenS(!openS);\r\n  };\r\n\r\n   const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    let regions = provinceList\r\n      .map((value) => value.region)\r\n      .filter((value, id, array) => array.indexOf(value) === id);\r\n    setRegions(regions);\r\n    let centralProvince = provinceList\r\n      .filter((val) => val.region === \"Central\")\r\n      .map((val) => val.Province);\r\n    let northernProvince = provinceList\r\n      .filter((val) => val.region === \"Northern\")\r\n      .map((val) => val.Province);\r\n    let northeasternProvince = provinceList\r\n      .filter((val) => val.region === \"Northeastern\")\r\n      .map((val) => val.Province);\r\n    let southernProvince = provinceList\r\n      .filter((val) => val.region === \"Southern\")\r\n      .map((val) => val.Province);\r\n    setCentral(removeDuplicate(centralProvince));\r\n    setNorthern(removeDuplicate(northernProvince));\r\n    setNortheastern(removeDuplicate(northeasternProvince));\r\n    setSouthern(removeDuplicate(southernProvince));\r\n  },[]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n       <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Demographic\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n          <div className={classes.drawerContainer}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-labelledby=\"nested-list-subheader\"\r\n              subheader={\r\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                  Select Region\r\n                </ListSubheader>\r\n              }\r\n              className={classes.Listroot}\r\n            >\r\n              <ListItem button onClick={() =>handleClickC()}>\r\n                <ListItemIcon>\r\n                  <StarBorder />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Central\" />\r\n                {openC ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {central.map((val, id) => (\r\n                <Collapse in={openC} key ={id} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.Listnested} onClick={event =>onChang(val)}>\r\n                      <ListItemIcon>\r\n                        <LocationCityIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={val} />\r\n                    </ListItem>\r\n                  </List>\r\n                </Collapse>\r\n              ))}\r\n              <ListItem button onClick={() =>handleClickN()}>\r\n                <ListItemIcon>\r\n                  <StarBorder />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Northern\" />\r\n                {openN ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n                {northern.map((val, id) => (\r\n              <Collapse in={openN} key ={id} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                  <ListItem button className={classes.Listnested} onClick={event =>onChang(val)}>\r\n                    <ListItemIcon>\r\n                      <LocationCityIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={val} />\r\n                  </ListItem>\r\n                </List>\r\n              </Collapse>\r\n               ))}\r\n              <ListItem button onClick={() =>handleClickNW()}>\r\n                <ListItemIcon>\r\n                  <StarBorder />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Northeaster\" />\r\n                {openNW ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {northeastern.map((val, id) => (\r\n              <Collapse in={openNW} key ={id} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                  <ListItem button className={classes.Listnested} onClick={event =>onChang(val)}>\r\n                    <ListItemIcon>\r\n                      <LocationCityIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={val} />\r\n                  </ListItem>\r\n                </List>\r\n              </Collapse>\r\n              ))}\r\n              <ListItem button onClick={() =>handleClickS()}>\r\n                <ListItemIcon>\r\n                  <StarBorder />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Southern\"} />\r\n                {openS ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {southern.map((val, id) => (\r\n              <Collapse in={openS} key ={id} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding >\r\n                  <ListItem button className={classes.Listnested} onClick={event =>onChang(val)}>\r\n                    <ListItemIcon>\r\n                      <LocationCityIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={val} />\r\n                  </ListItem>\r\n                </List>\r\n              </Collapse>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\n\r\nfunction findMaxvalue(min, max){\r\n  const Min = Math.abs(min);\r\n  if(max > Min){\r\n    return max\r\n  }else{\r\n    return Min\r\n  }\r\n}\r\n\r\nconst Pyramid = ({ total, male, female }) => {\r\n  let numberMale = male.map(Number);\r\n  let numberFemale = female.map(Number);\r\n  let femaleReversed = numberFemale.reverse();\r\n  const dataFemale = femaleReversed.map((s) => -Math.abs(s));\r\n  const dataMale = numberMale.reverse();\r\n\r\n  const maxYaxis = Math.max(...numberMale);\r\n  const minYaxis = Math.min(...dataFemale);\r\n\r\n  const Yaxis = findMaxvalue(minYaxis, maxYaxis);\r\n\r\n   const series = [\r\n    {\r\n      name: \"Females\",\r\n      data: dataFemale,\r\n    },\r\n    {\r\n      name: \"Males\",\r\n      data: dataMale,\r\n    },\r\n  ];\r\n  const options = {\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 440,\r\n      stacked: true,\r\n    },\r\n    colors: [\"#008FFB\", \"#FF4560\"],\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: \"100%\",\r\n        dataLabels: {\r\n          position: \"top\",\r\n        },\r\n      },\r\n    },\r\n    dataLabels: {\r\n      formatter: function (val) {\r\n        return Math.abs(val);\r\n      },\r\n      enabled: true,\r\n      style: {\r\n        fontSize: \"9px\",\r\n        colors: [\"#333\"],\r\n      },\r\n      offsetX: 30,\r\n    },\r\n    stroke: {\r\n      width: 1,\r\n      colors: [\"#fff\"],\r\n    },\r\n    grid: {\r\n      xaxis: {\r\n        lines: {\r\n          show: false,\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      min: -Yaxis,\r\n      max: Yaxis,\r\n      forceNiceScale: true,\r\n      floating: false,\r\n      title: {\r\n        // text: 'Age',\r\n      },\r\n    },\r\n    tooltip: {\r\n      shared: false,\r\n      x: {\r\n        formatter: function (val) {\r\n          return val;\r\n        },\r\n      },\r\n      y: {\r\n        formatter: function (val) {\r\n          return Math.abs(val);\r\n        },\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        \"100+\",\r\n        \"95-99\",\r\n        \"90-94\",\r\n        \"85-89\",\r\n        \"80-84\",\r\n        \"75-79\",\r\n        \"70-74\",\r\n        \"65-69\",\r\n        \"60-64\",\r\n        \"55-59\",\r\n        \"50-54\",\r\n        \"45-49\",\r\n        \"40-44\",\r\n        \"35-39\",\r\n        \"30-34\",\r\n        \"25-29\",\r\n        \"20-24\",\r\n        \"15-19\",\r\n        \"10-14\",\r\n        \"5-9\",\r\n        \"0-4\",\r\n      ],\r\n      title: {\r\n        text: \"Total\",\r\n      },\r\n      labels: {\r\n        formatter: function (val) {\r\n          return Math.abs(Math.round(val)) + \"\";\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return(\r\n\r\n      <ReactApexChart options={options} series={series} type=\"bar\" height={600} />\r\n  )\r\n};\r\n\r\nexport default Pyramid;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Pyramid from '../Chart/Pyramid'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    transitionDuration: '0.3s',\r\n  },\r\n});\r\n\r\nconst CardPyramid = ({ total, male, female }) => {\r\n   const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Pyramid Population of \r\n          </Typography>\r\n        </CardContent>\r\n        <CardContent>\r\n            <Pyramid total={total} male={male} female={female} />\r\n        </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardPyramid;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CardPyramid from './CardPyramid'\r\n\r\nfunction filterData(param) {\r\n  let filter = Object.keys(param)\r\n    .filter(\r\n      (item) =>\r\n        item !== \"ID\" &&\r\n        item !== \"region\" &&\r\n        item !== \"Province\" &&\r\n        item !== \"Density\" &&\r\n        item !== \"Sex\" &&\r\n        item !== \"medianAge\" &&\r\n        item !== \"Rank\" &&\r\n        item !== \"Total\" &&\r\n        item !== \"Undefine\"\r\n    )\r\n    .map((item) => {\r\n      return param[item];\r\n    });\r\n  return filter;\r\n}\r\n\r\nconst PyramidData = ({ provinceData }) => {\r\n\r\n  const [total, setTotal] = useState([]);\r\n  const [male, setMale] = useState([]);\r\n  const [female, setFeMale] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const [Total, Male, Female] = provinceData;\r\n    \r\n    const spitTotal = filterData(Total);\r\n    const spitMale = filterData(Male);\r\n    const spitFemale = filterData(Female);\r\n\r\n    setTotal(spitTotal);\r\n    setMale(spitMale);\r\n    setFeMale(spitFemale);\r\n  }, [provinceData]);\r\n\r\n  return <CardPyramid total={total} male={male} female={female} />;\r\n};\r\n\r\nexport default PyramidData;\r\n","import React, { Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LocationCity from \"@material-ui/icons/LocationCity\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst Breadcrumb = ({ province, onChang }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n        <Link\r\n          href=\"#\"\r\n          underline=\"hover\"\r\n          color=\"primary\"\r\n          onClick={() => onChang('Thailand')}\r\n          className={classes.link}\r\n        >\r\n          <HomeIcon className={classes.icon} />\r\n          Thailand\r\n        </Link>\r\n        {province !== \"Thailand\" ? (\r\n          <Typography color=\"secondary\" className={classes.link}>\r\n            <LocationCity className={classes.icon} />\r\n            {province}\r\n          </Typography>\r\n        ) : null}\r\n      </Breadcrumbs>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport UiCard from \"../Card/UiCard\";\r\nimport TitleData from \"../Card/TitleData\";\r\nimport Filter from \"./Filter\";\r\nimport PyramidData from \"../Card/PyramidData\";\r\nimport Breadcrumb from \"../Card/Breadcrumb\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // blue and grey play nicely together.\r\n      main: \"#2196f3\",\r\n      light: \"#e3f2fd\",\r\n      dark: \"#0d47a1\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      // This is grey\r\n      main: \"#9e9e9e\",\r\n      light: \"#e0e0e0\",\r\n      dark: \"#212121\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default ({ nationData, provinceList }) => {\r\n  const [province, setProvince] = useState(\"Thailand\");\r\n  const [provinceData, setProvinceData] = useState([]);\r\n  const [isLoad, setIsLoad] = useState(true);\r\n\r\n  const thailandData = useMemo(() =>{\r\n    return nationData\r\n  },[]);\r\n\r\n  \r\n  useEffect(() => {\r\n    console.log(isLoad);\r\n    let data = provinceList.filter((val) => val.Province === province);\r\n    setProvinceData(data);\r\n    setIsLoad(false);\r\n  }, [province]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={theme}>\r\n        <Box bgcolor=\"secondary.light\">\r\n          <Filter\r\n            provinceList={provinceList}\r\n            onChang={(value) => setProvince(value)}\r\n          />\r\n          <Box py={12}>\r\n            <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n              <Grid item xs={12} xl={7} lg={7} md={10} sm={12} spaceing={10}>\r\n                <Breadcrumb\r\n                  province={province}\r\n                  onChang={(value) => setProvince(value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} xl={7} lg={7} md={10} sm={12} spaceing={10}>\r\n                {isLoad ? (\r\n                  <div>load.....</div>\r\n                ) : (\r\n                  <TitleData provinceData={provinceData} />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} xl={7} lg={7} md={10} sm={12} spaceing={10}>\r\n                {isLoad ? null : <PyramidData provinceData={provinceData} />}\r\n              </Grid>\r\n              {province === \"Thailand\" &&\r\n                thailandData\r\n                  .filter(\r\n                    (data) =>\r\n                      data.IndicatorName !== \"Urban_population\" &&\r\n                      data.IndicatorName !== \"Rural_population\" &&\r\n                      data.IndicatorName !== \"Population_density\" &&\r\n                      data.IndicatorName !== \"Survival_to_age_65_female\" &&\r\n                      data.IndicatorName !== \"Survival_to_age65Male\"\r\n                  )\r\n                  .map((data) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      xl={7}\r\n                      lg={7}\r\n                      md={10}\r\n                      sm={12}\r\n                      key={data.IndicatorName}\r\n                    >\r\n                      <UiCard data={data} />\r\n                    </Grid>\r\n                  ))}\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  media: {\r\n    height: 420,\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  typography: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"1rem\",\r\n    },\r\n  },\r\n  detail: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Skeloton = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <Box bgcolor=\"#e0e0e0\">\r\n        <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n          <Grid item xs={12} xl={7} lg={7} md={10} sm={12} spaceing={10}>\r\n            <Card className={classes.card}>\r\n              <Skeleton width=\"100%\">\r\n                <Typography component=\"div\" key={\"h3\"} variant={\"h3\"}>\r\n                  .\r\n                </Typography>\r\n              </Skeleton>\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n                className={classes.media}\r\n              />\r\n              <div className={classes.content}>\r\n              <CardContent className={classes.detail}>\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"h5\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.typography}\r\n                >\r\n                  Population\r\n                </Typography>\r\n                <Skeleton width=\"100%\">\r\n                  <Typography\r\n                    variant=\"h4\"\r\n                    color=\"primary\"\r\n                    className={classes.typography}\r\n                  >\r\n                    .\r\n                  </Typography>\r\n                </Skeleton>\r\n              </CardContent>\r\n              <CardContent className={classes.detail}>\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"h5\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.typography}\r\n                >\r\n                  Median Age\r\n                </Typography>\r\n                <Skeleton width=\"100%\">\r\n                  <Typography\r\n                    variant=\"h4\"\r\n                    color=\"primary\"\r\n                    className={classes.typography}\r\n                  >\r\n                    .\r\n                  </Typography>\r\n                </Skeleton>\r\n              </CardContent>\r\n              <CardContent className={classes.detail}>\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"h5\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.typography}\r\n                >\r\n                  Density\r\n                </Typography>\r\n                <Skeleton width=\"100%\">\r\n                  <Typography\r\n                    variant=\"h4\"\r\n                    color=\"primary\"\r\n                    className={classes.typography}\r\n                  >\r\n                    .\r\n                  </Typography>\r\n                </Skeleton>\r\n              </CardContent>\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Skeloton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Ladning from \"../Landing\";\r\nimport Skeloton from '../skeleton/Skeloton'\r\nconst FetchData = () => {\r\n  const [provinceList, setProvince] = useState([]);\r\n  const [nationData, setNationData] = useState([]);\r\n  const [isLoad, setIsLoad] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const callApi = async () => {\r\n      console.log(\"callApi\");\r\n\r\n      const response_provinces = await fetch(\r\n        \"https://raw.githubusercontent.com/chakkaphong/demographic/master/data.json\"\r\n      );\r\n      const response_nation_data = await fetch(\r\n        \"https://raw.githubusercontent.com/chakkaphong/demographic/master/Thai_Detail.json\"\r\n      );\r\n      const provinces = await response_provinces.json();\r\n      const nationData = await response_nation_data.json();\r\n      if (mounted) {\r\n        setProvince(provinces);\r\n        setNationData(nationData);\r\n        setIsLoad(false);\r\n      }\r\n    };\r\n    callApi();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {isLoad ? <Skeloton /> : <Ladning nationData={nationData} provinceList={provinceList} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchData;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Header, Footer } from \"./Components/Layout\";\nimport FetchData from './Components/CallApi/FetchData'\n\nconst Contianer = styled.div`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    overflow: hidden;\n  }\n`;\n\nfunction App() {\n  return (\n    <Contianer>\n      <Header />\n      <FetchData />\n      <Footer />\n    </Contianer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}